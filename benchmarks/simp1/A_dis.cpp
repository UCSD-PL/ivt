// Generated by llvm2cpp - DO NOT MODIFY!

#include <llvm/Pass.h>
#include <llvm/ADT/SmallVector.h>
#include <llvm/Analysis/Verifier.h>
#include <llvm/IR/BasicBlock.h>
#include <llvm/IR/CallingConv.h>
#include <llvm/IR/Constants.h>
#include <llvm/IR/DerivedTypes.h>
#include <llvm/IR/Function.h>
#include <llvm/IR/GlobalVariable.h>
#include <llvm/IR/IRPrintingPasses.h>
#include <llvm/IR/InlineAsm.h>
#include <llvm/IR/Instructions.h>
#include <llvm/IR/LLVMContext.h>
#include <llvm/IR/LegacyPassManager.h>
#include <llvm/IR/Module.h>
#include <llvm/Support/FormattedStream.h>
#include <llvm/Support/MathExtras.h>
#include <algorithm>
using namespace llvm;

Module* makeLLVMModule();

int main(int argc, char**argv) {
  Module* Mod = makeLLVMModule();
  verifyModule(*Mod, PrintMessageAction);
  PassManager PM;
  PM.add(createPrintModulePass(&outs()));
  PM.run(*Mod);
  return 0;
}


Module* makeLLVMModule() {
 // Module Construction
 Module* mod = new Module("A.o", getGlobalContext());
 mod->setDataLayout("");
 mod->setTargetTriple("x86_64-unknown-linux-gnu");
 
 // Type Definitions
 StructType *StructTy_class_std__ios_base__Init = mod->getTypeByName("class.std::ios_base::Init");
 if (!StructTy_class_std__ios_base__Init) {
 StructTy_class_std__ios_base__Init = StructType::create(mod->getContext(), "class.std::ios_base::Init");
 }
 std::vector<Type*>StructTy_class_std__ios_base__Init_fields;
 StructTy_class_std__ios_base__Init_fields.push_back(IntegerType::get(mod->getContext(), 8));
 if (StructTy_class_std__ios_base__Init->isOpaque()) {
 StructTy_class_std__ios_base__Init->setBody(StructTy_class_std__ios_base__Init_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_0 = PointerType::get(StructTy_class_std__ios_base__Init, 0);
 
 PointerType* PointerTy_1 = PointerType::get(IntegerType::get(mod->getContext(), 8), 0);
 
 StructType *StructTy_class_std__basic_ostream = mod->getTypeByName("class.std::basic_ostream");
 if (!StructTy_class_std__basic_ostream) {
 StructTy_class_std__basic_ostream = StructType::create(mod->getContext(), "class.std::basic_ostream");
 }
 std::vector<Type*>StructTy_class_std__basic_ostream_fields;
 std::vector<Type*>FuncTy_5_args;
 FunctionType* FuncTy_5 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_5_args,
  /*isVarArg=*/true);
 
 PointerType* PointerTy_4 = PointerType::get(FuncTy_5, 0);
 
 PointerType* PointerTy_3 = PointerType::get(PointerTy_4, 0);
 
 StructTy_class_std__basic_ostream_fields.push_back(PointerTy_3);
 StructType *StructTy_class_std__basic_ios = mod->getTypeByName("class.std::basic_ios");
 if (!StructTy_class_std__basic_ios) {
 StructTy_class_std__basic_ios = StructType::create(mod->getContext(), "class.std::basic_ios");
 }
 std::vector<Type*>StructTy_class_std__basic_ios_fields;
 StructType *StructTy_class_std__ios_base = mod->getTypeByName("class.std::ios_base");
 if (!StructTy_class_std__ios_base) {
 StructTy_class_std__ios_base = StructType::create(mod->getContext(), "class.std::ios_base");
 }
 std::vector<Type*>StructTy_class_std__ios_base_fields;
 StructTy_class_std__ios_base_fields.push_back(PointerTy_3);
 StructTy_class_std__ios_base_fields.push_back(IntegerType::get(mod->getContext(), 64));
 StructTy_class_std__ios_base_fields.push_back(IntegerType::get(mod->getContext(), 64));
 StructTy_class_std__ios_base_fields.push_back(IntegerType::get(mod->getContext(), 32));
 StructTy_class_std__ios_base_fields.push_back(IntegerType::get(mod->getContext(), 32));
 StructTy_class_std__ios_base_fields.push_back(IntegerType::get(mod->getContext(), 32));
 StructType *StructTy_struct_std__ios_base___Callback_list = mod->getTypeByName("struct.std::ios_base::_Callback_list");
 if (!StructTy_struct_std__ios_base___Callback_list) {
 StructTy_struct_std__ios_base___Callback_list = StructType::create(mod->getContext(), "struct.std::ios_base::_Callback_list");
 }
 std::vector<Type*>StructTy_struct_std__ios_base___Callback_list_fields;
 PointerType* PointerTy_6 = PointerType::get(StructTy_struct_std__ios_base___Callback_list, 0);
 
 StructTy_struct_std__ios_base___Callback_list_fields.push_back(PointerTy_6);
 std::vector<Type*>FuncTy_8_args;
 FuncTy_8_args.push_back(IntegerType::get(mod->getContext(), 32));
 PointerType* PointerTy_9 = PointerType::get(StructTy_class_std__ios_base, 0);
 
 FuncTy_8_args.push_back(PointerTy_9);
 FuncTy_8_args.push_back(IntegerType::get(mod->getContext(), 32));
 FunctionType* FuncTy_8 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_8_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_7 = PointerType::get(FuncTy_8, 0);
 
 StructTy_struct_std__ios_base___Callback_list_fields.push_back(PointerTy_7);
 StructTy_struct_std__ios_base___Callback_list_fields.push_back(IntegerType::get(mod->getContext(), 32));
 StructTy_struct_std__ios_base___Callback_list_fields.push_back(IntegerType::get(mod->getContext(), 32));
 if (StructTy_struct_std__ios_base___Callback_list->isOpaque()) {
 StructTy_struct_std__ios_base___Callback_list->setBody(StructTy_struct_std__ios_base___Callback_list_fields, /*isPacked=*/false);
 }
 
 
 StructTy_class_std__ios_base_fields.push_back(PointerTy_6);
 StructType *StructTy_struct_std__ios_base___Words = mod->getTypeByName("struct.std::ios_base::_Words");
 if (!StructTy_struct_std__ios_base___Words) {
 StructTy_struct_std__ios_base___Words = StructType::create(mod->getContext(), "struct.std::ios_base::_Words");
 }
 std::vector<Type*>StructTy_struct_std__ios_base___Words_fields;
 StructTy_struct_std__ios_base___Words_fields.push_back(PointerTy_1);
 StructTy_struct_std__ios_base___Words_fields.push_back(IntegerType::get(mod->getContext(), 64));
 if (StructTy_struct_std__ios_base___Words->isOpaque()) {
 StructTy_struct_std__ios_base___Words->setBody(StructTy_struct_std__ios_base___Words_fields, /*isPacked=*/false);
 }
 
 StructTy_class_std__ios_base_fields.push_back(StructTy_struct_std__ios_base___Words);
 ArrayType* ArrayTy_10 = ArrayType::get(StructTy_struct_std__ios_base___Words, 8);
 
 StructTy_class_std__ios_base_fields.push_back(ArrayTy_10);
 StructTy_class_std__ios_base_fields.push_back(IntegerType::get(mod->getContext(), 32));
 PointerType* PointerTy_11 = PointerType::get(StructTy_struct_std__ios_base___Words, 0);
 
 StructTy_class_std__ios_base_fields.push_back(PointerTy_11);
 StructType *StructTy_class_std__locale = mod->getTypeByName("class.std::locale");
 if (!StructTy_class_std__locale) {
 StructTy_class_std__locale = StructType::create(mod->getContext(), "class.std::locale");
 }
 std::vector<Type*>StructTy_class_std__locale_fields;
 StructType *StructTy_class_std__locale___Impl = mod->getTypeByName("class.std::locale::_Impl");
 if (!StructTy_class_std__locale___Impl) {
 StructTy_class_std__locale___Impl = StructType::create(mod->getContext(), "class.std::locale::_Impl");
 }
 std::vector<Type*>StructTy_class_std__locale___Impl_fields;
 StructTy_class_std__locale___Impl_fields.push_back(IntegerType::get(mod->getContext(), 32));
 StructType *StructTy_class_std__locale__facet = mod->getTypeByName("class.std::locale::facet");
 if (!StructTy_class_std__locale__facet) {
 StructTy_class_std__locale__facet = StructType::create(mod->getContext(), "class.std::locale::facet");
 }
 std::vector<Type*>StructTy_class_std__locale__facet_fields;
 StructTy_class_std__locale__facet_fields.push_back(PointerTy_3);
 StructTy_class_std__locale__facet_fields.push_back(IntegerType::get(mod->getContext(), 32));
 ArrayType* ArrayTy_15 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 4);
 
 StructTy_class_std__locale__facet_fields.push_back(ArrayTy_15);
 if (StructTy_class_std__locale__facet->isOpaque()) {
 StructTy_class_std__locale__facet->setBody(StructTy_class_std__locale__facet_fields, /*isPacked=*/true);
 }
 
 PointerType* PointerTy_14 = PointerType::get(StructTy_class_std__locale__facet, 0);
 
 PointerType* PointerTy_13 = PointerType::get(PointerTy_14, 0);
 
 StructTy_class_std__locale___Impl_fields.push_back(PointerTy_13);
 StructTy_class_std__locale___Impl_fields.push_back(IntegerType::get(mod->getContext(), 64));
 StructTy_class_std__locale___Impl_fields.push_back(PointerTy_13);
 PointerType* PointerTy_16 = PointerType::get(PointerTy_1, 0);
 
 StructTy_class_std__locale___Impl_fields.push_back(PointerTy_16);
 if (StructTy_class_std__locale___Impl->isOpaque()) {
 StructTy_class_std__locale___Impl->setBody(StructTy_class_std__locale___Impl_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_12 = PointerType::get(StructTy_class_std__locale___Impl, 0);
 
 StructTy_class_std__locale_fields.push_back(PointerTy_12);
 if (StructTy_class_std__locale->isOpaque()) {
 StructTy_class_std__locale->setBody(StructTy_class_std__locale_fields, /*isPacked=*/false);
 }
 
 StructTy_class_std__ios_base_fields.push_back(StructTy_class_std__locale);
 if (StructTy_class_std__ios_base->isOpaque()) {
 StructTy_class_std__ios_base->setBody(StructTy_class_std__ios_base_fields, /*isPacked=*/false);
 }
 
 StructTy_class_std__basic_ios_fields.push_back(StructTy_class_std__ios_base);
 PointerType* PointerTy_2 = PointerType::get(StructTy_class_std__basic_ostream, 0);
 
 StructTy_class_std__basic_ios_fields.push_back(PointerTy_2);
 StructTy_class_std__basic_ios_fields.push_back(IntegerType::get(mod->getContext(), 8));
 StructTy_class_std__basic_ios_fields.push_back(IntegerType::get(mod->getContext(), 8));
 StructType *StructTy_class_std__basic_streambuf = mod->getTypeByName("class.std::basic_streambuf");
 if (!StructTy_class_std__basic_streambuf) {
 StructTy_class_std__basic_streambuf = StructType::create(mod->getContext(), "class.std::basic_streambuf");
 }
 std::vector<Type*>StructTy_class_std__basic_streambuf_fields;
 StructTy_class_std__basic_streambuf_fields.push_back(PointerTy_3);
 StructTy_class_std__basic_streambuf_fields.push_back(PointerTy_1);
 StructTy_class_std__basic_streambuf_fields.push_back(PointerTy_1);
 StructTy_class_std__basic_streambuf_fields.push_back(PointerTy_1);
 StructTy_class_std__basic_streambuf_fields.push_back(PointerTy_1);
 StructTy_class_std__basic_streambuf_fields.push_back(PointerTy_1);
 StructTy_class_std__basic_streambuf_fields.push_back(PointerTy_1);
 StructTy_class_std__basic_streambuf_fields.push_back(StructTy_class_std__locale);
 if (StructTy_class_std__basic_streambuf->isOpaque()) {
 StructTy_class_std__basic_streambuf->setBody(StructTy_class_std__basic_streambuf_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_17 = PointerType::get(StructTy_class_std__basic_streambuf, 0);
 
 StructTy_class_std__basic_ios_fields.push_back(PointerTy_17);
 StructType *StructTy_class_std__ctype = mod->getTypeByName("class.std::ctype");
 if (!StructTy_class_std__ctype) {
 StructTy_class_std__ctype = StructType::create(mod->getContext(), "class.std::ctype");
 }
 std::vector<Type*>StructTy_class_std__ctype_fields;
 StructType *StructTy_class_std__locale__facet_base = mod->getTypeByName("class.std::locale::facet.base");
 if (!StructTy_class_std__locale__facet_base) {
 StructTy_class_std__locale__facet_base = StructType::create(mod->getContext(), "class.std::locale::facet.base");
 }
 std::vector<Type*>StructTy_class_std__locale__facet_base_fields;
 StructTy_class_std__locale__facet_base_fields.push_back(PointerTy_3);
 StructTy_class_std__locale__facet_base_fields.push_back(IntegerType::get(mod->getContext(), 32));
 if (StructTy_class_std__locale__facet_base->isOpaque()) {
 StructTy_class_std__locale__facet_base->setBody(StructTy_class_std__locale__facet_base_fields, /*isPacked=*/true);
 }
 
 StructTy_class_std__ctype_fields.push_back(StructTy_class_std__locale__facet_base);
 StructTy_class_std__ctype_fields.push_back(ArrayTy_15);
 StructType *StructTy_struct___locale_struct = mod->getTypeByName("struct.__locale_struct");
 if (!StructTy_struct___locale_struct) {
 StructTy_struct___locale_struct = StructType::create(mod->getContext(), "struct.__locale_struct");
 }
 std::vector<Type*>StructTy_struct___locale_struct_fields;
 StructType *StructTy_struct___locale_data = mod->getTypeByName("struct.__locale_data");
 if (!StructTy_struct___locale_data) {
 StructTy_struct___locale_data = StructType::create(mod->getContext(), "struct.__locale_data");
 }
 std::vector<Type*>StructTy_struct___locale_data_fields;
 if (StructTy_struct___locale_data->isOpaque()) {
 StructTy_struct___locale_data->setBody(StructTy_struct___locale_data_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_21 = PointerType::get(StructTy_struct___locale_data, 0);
 
 ArrayType* ArrayTy_20 = ArrayType::get(PointerTy_21, 13);
 
 StructTy_struct___locale_struct_fields.push_back(ArrayTy_20);
 PointerType* PointerTy_22 = PointerType::get(IntegerType::get(mod->getContext(), 16), 0);
 
 StructTy_struct___locale_struct_fields.push_back(PointerTy_22);
 PointerType* PointerTy_23 = PointerType::get(IntegerType::get(mod->getContext(), 32), 0);
 
 StructTy_struct___locale_struct_fields.push_back(PointerTy_23);
 StructTy_struct___locale_struct_fields.push_back(PointerTy_23);
 ArrayType* ArrayTy_24 = ArrayType::get(PointerTy_1, 13);
 
 StructTy_struct___locale_struct_fields.push_back(ArrayTy_24);
 if (StructTy_struct___locale_struct->isOpaque()) {
 StructTy_struct___locale_struct->setBody(StructTy_struct___locale_struct_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_19 = PointerType::get(StructTy_struct___locale_struct, 0);
 
 StructTy_class_std__ctype_fields.push_back(PointerTy_19);
 StructTy_class_std__ctype_fields.push_back(IntegerType::get(mod->getContext(), 8));
 ArrayType* ArrayTy_25 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 7);
 
 StructTy_class_std__ctype_fields.push_back(ArrayTy_25);
 StructTy_class_std__ctype_fields.push_back(PointerTy_23);
 StructTy_class_std__ctype_fields.push_back(PointerTy_23);
 StructTy_class_std__ctype_fields.push_back(PointerTy_22);
 StructTy_class_std__ctype_fields.push_back(IntegerType::get(mod->getContext(), 8));
 ArrayType* ArrayTy_26 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 256);
 
 StructTy_class_std__ctype_fields.push_back(ArrayTy_26);
 StructTy_class_std__ctype_fields.push_back(ArrayTy_26);
 StructTy_class_std__ctype_fields.push_back(IntegerType::get(mod->getContext(), 8));
 ArrayType* ArrayTy_27 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 6);
 
 StructTy_class_std__ctype_fields.push_back(ArrayTy_27);
 if (StructTy_class_std__ctype->isOpaque()) {
 StructTy_class_std__ctype->setBody(StructTy_class_std__ctype_fields, /*isPacked=*/true);
 }
 
 PointerType* PointerTy_18 = PointerType::get(StructTy_class_std__ctype, 0);
 
 StructTy_class_std__basic_ios_fields.push_back(PointerTy_18);
 StructType *StructTy_class_std__num_put = mod->getTypeByName("class.std::num_put");
 if (!StructTy_class_std__num_put) {
 StructTy_class_std__num_put = StructType::create(mod->getContext(), "class.std::num_put");
 }
 std::vector<Type*>StructTy_class_std__num_put_fields;
 StructTy_class_std__num_put_fields.push_back(StructTy_class_std__locale__facet_base);
 StructTy_class_std__num_put_fields.push_back(ArrayTy_15);
 if (StructTy_class_std__num_put->isOpaque()) {
 StructTy_class_std__num_put->setBody(StructTy_class_std__num_put_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_28 = PointerType::get(StructTy_class_std__num_put, 0);
 
 StructTy_class_std__basic_ios_fields.push_back(PointerTy_28);
 StructType *StructTy_class_std__num_get = mod->getTypeByName("class.std::num_get");
 if (!StructTy_class_std__num_get) {
 StructTy_class_std__num_get = StructType::create(mod->getContext(), "class.std::num_get");
 }
 std::vector<Type*>StructTy_class_std__num_get_fields;
 StructTy_class_std__num_get_fields.push_back(StructTy_class_std__locale__facet_base);
 StructTy_class_std__num_get_fields.push_back(ArrayTy_15);
 if (StructTy_class_std__num_get->isOpaque()) {
 StructTy_class_std__num_get->setBody(StructTy_class_std__num_get_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_29 = PointerType::get(StructTy_class_std__num_get, 0);
 
 StructTy_class_std__basic_ios_fields.push_back(PointerTy_29);
 if (StructTy_class_std__basic_ios->isOpaque()) {
 StructTy_class_std__basic_ios->setBody(StructTy_class_std__basic_ios_fields, /*isPacked=*/false);
 }
 
 StructTy_class_std__basic_ostream_fields.push_back(StructTy_class_std__basic_ios);
 if (StructTy_class_std__basic_ostream->isOpaque()) {
 StructTy_class_std__basic_ostream->setBody(StructTy_class_std__basic_ostream_fields, /*isPacked=*/false);
 }
 
 
 ArrayType* ArrayTy_30 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 5);
 
 PointerType* PointerTy_31 = PointerType::get(ArrayTy_30, 0);
 
 ArrayType* ArrayTy_32 = ArrayType::get(PointerTy_1, 4);
 
 PointerType* PointerTy_33 = PointerType::get(ArrayTy_32, 0);
 
 ArrayType* ArrayTy_34 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 3);
 
 PointerType* PointerTy_35 = PointerType::get(ArrayTy_34, 0);
 
 std::vector<Type*>StructTy_36_fields;
 StructTy_36_fields.push_back(PointerTy_1);
 StructTy_36_fields.push_back(PointerTy_1);
 StructType *StructTy_36 = StructType::get(mod->getContext(), StructTy_36_fields, /*isPacked=*/false);
 
 PointerType* PointerTy_37 = PointerType::get(StructTy_36, 0);
 
 std::vector<Type*>StructTy_39_fields;
 StructTy_39_fields.push_back(IntegerType::get(mod->getContext(), 32));
 std::vector<Type*>FuncTy_41_args;
 FunctionType* FuncTy_41 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_41_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_40 = PointerType::get(FuncTy_41, 0);
 
 StructTy_39_fields.push_back(PointerTy_40);
 StructTy_39_fields.push_back(PointerTy_1);
 StructType *StructTy_39 = StructType::get(mod->getContext(), StructTy_39_fields, /*isPacked=*/false);
 
 ArrayType* ArrayTy_38 = ArrayType::get(StructTy_39, 1);
 
 PointerType* PointerTy_42 = PointerType::get(ArrayTy_38, 0);
 
 std::vector<Type*>FuncTy_44_args;
 FuncTy_44_args.push_back(PointerTy_0);
 FunctionType* FuncTy_44 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_44_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_43 = PointerType::get(FuncTy_44, 0);
 
 std::vector<Type*>FuncTy_46_args;
 FuncTy_46_args.push_back(PointerTy_1);
 FunctionType* FuncTy_46 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_46_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_45 = PointerType::get(FuncTy_46, 0);
 
 std::vector<Type*>FuncTy_48_args;
 FuncTy_48_args.push_back(PointerTy_45);
 FuncTy_48_args.push_back(PointerTy_1);
 FuncTy_48_args.push_back(PointerTy_1);
 FunctionType* FuncTy_48 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_48_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_47 = PointerType::get(FuncTy_48, 0);
 
 std::vector<Type*>FuncTy_49_args;
 StructType *StructTy_class_A = mod->getTypeByName("class.A");
 if (!StructTy_class_A) {
 StructTy_class_A = StructType::create(mod->getContext(), "class.A");
 }
 std::vector<Type*>StructTy_class_A_fields;
 StructTy_class_A_fields.push_back(PointerTy_3);
 if (StructTy_class_A->isOpaque()) {
 StructTy_class_A->setBody(StructTy_class_A_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_50 = PointerType::get(StructTy_class_A, 0);
 
 FuncTy_49_args.push_back(PointerTy_50);
 FunctionType* FuncTy_49 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_49_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_51 = PointerType::get(PointerTy_50, 0);
 
 std::vector<Type*>FuncTy_53_args;
 FuncTy_53_args.push_back(OtherTy_54);
 FuncTy_53_args.push_back(OtherTy_54);
 FuncTy_53_args.push_back(OtherTy_54);
 FunctionType* FuncTy_53 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_53_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_52 = PointerType::get(FuncTy_53, 0);
 
 std::vector<Type*>FuncTy_56_args;
 FuncTy_56_args.push_back(PointerTy_2);
 FuncTy_56_args.push_back(PointerTy_1);
 FunctionType* FuncTy_56 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_56_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_55 = PointerType::get(FuncTy_56, 0);
 
 std::vector<Type*>FuncTy_58_args;
 FuncTy_58_args.push_back(PointerTy_2);
 FunctionType* FuncTy_58 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_58_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_57 = PointerType::get(FuncTy_58, 0);
 
 std::vector<Type*>FuncTy_60_args;
 FuncTy_60_args.push_back(PointerTy_2);
 FuncTy_60_args.push_back(PointerTy_57);
 FunctionType* FuncTy_60 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_60_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_59 = PointerType::get(FuncTy_60, 0);
 
 
 // Function Declarations
 
 Function* func___cxx_global_var_init = mod->getFunction("__cxx_global_var_init");
 if (!func___cxx_global_var_init) {
 func___cxx_global_var_init = Function::Create(
  /*Type=*/FuncTy_41,
  /*Linkage=*/GlobalValue::InternalLinkage,
  /*Name=*/"__cxx_global_var_init", mod); 
 func___cxx_global_var_init->setCallingConv(CallingConv::C);
 func___cxx_global_var_init->setSection(".text.startup");
 }
 AttributeSet func___cxx_global_var_init_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func___cxx_global_var_init_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func___cxx_global_var_init->setAttributes(func___cxx_global_var_init_PAL);
 
 Function* func__ZNSt8ios_base4InitC1Ev = mod->getFunction("_ZNSt8ios_base4InitC1Ev");
 if (!func__ZNSt8ios_base4InitC1Ev) {
 func__ZNSt8ios_base4InitC1Ev = Function::Create(
  /*Type=*/FuncTy_44,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_ZNSt8ios_base4InitC1Ev", mod); // (external, no body)
 func__ZNSt8ios_base4InitC1Ev->setCallingConv(CallingConv::C);
 }
 AttributeSet func__ZNSt8ios_base4InitC1Ev_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSt8ios_base4InitC1Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSt8ios_base4InitC1Ev->setAttributes(func__ZNSt8ios_base4InitC1Ev_PAL);
 
 Function* func__ZNSt8ios_base4InitD1Ev = mod->getFunction("_ZNSt8ios_base4InitD1Ev");
 if (!func__ZNSt8ios_base4InitD1Ev) {
 func__ZNSt8ios_base4InitD1Ev = Function::Create(
  /*Type=*/FuncTy_44,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_ZNSt8ios_base4InitD1Ev", mod); // (external, no body)
 func__ZNSt8ios_base4InitD1Ev->setCallingConv(CallingConv::C);
 }
 AttributeSet func__ZNSt8ios_base4InitD1Ev_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSt8ios_base4InitD1Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSt8ios_base4InitD1Ev->setAttributes(func__ZNSt8ios_base4InitD1Ev_PAL);
 
 Function* func___cxa_atexit = mod->getFunction("__cxa_atexit");
 if (!func___cxa_atexit) {
 func___cxa_atexit = Function::Create(
  /*Type=*/FuncTy_48,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"__cxa_atexit", mod); // (external, no body)
 func___cxa_atexit->setCallingConv(CallingConv::C);
 }
 AttributeSet func___cxa_atexit_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func___cxa_atexit_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func___cxa_atexit->setAttributes(func___cxa_atexit_PAL);
 
 Function* func__ZN1A1fEv = mod->getFunction("_ZN1A1fEv");
 if (!func__ZN1A1fEv) {
 func__ZN1A1fEv = Function::Create(
  /*Type=*/FuncTy_49,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_ZN1A1fEv", mod); 
 func__ZN1A1fEv->setCallingConv(CallingConv::C);
 func__ZN1A1fEv->setAlignment(2);
 }
 AttributeSet func__ZN1A1fEv_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::UWTable);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZN1A1fEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZN1A1fEv->setAttributes(func__ZN1A1fEv_PAL);
 
 Function* func_llvm_dbg_declare = mod->getFunction("llvm.dbg.declare");
 if (!func_llvm_dbg_declare) {
 func_llvm_dbg_declare = Function::Create(
  /*Type=*/FuncTy_53,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"llvm.dbg.declare", mod); // (external, no body)
 func_llvm_dbg_declare->setCallingConv(CallingConv::C);
 }
 AttributeSet func_llvm_dbg_declare_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::ReadNone);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func_llvm_dbg_declare_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func_llvm_dbg_declare->setAttributes(func_llvm_dbg_declare_PAL);
 
 Function* func__ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc = mod->getFunction("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc");
 if (!func__ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc) {
 func__ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc = Function::Create(
  /*Type=*/FuncTy_56,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", mod); // (external, no body)
 func__ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc->setCallingConv(CallingConv::C);
 }
 AttributeSet func__ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 1U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc->setAttributes(func__ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc_PAL);

Function* func__ZNSolsEPFRSoS_E = mod->getFunction("_ZNSolsEPFRSoS_E");
if (!func__ZNSolsEPFRSoS_E) {
func__ZNSolsEPFRSoS_E = Function::Create(
 /*Type=*/FuncTy_60,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZNSolsEPFRSoS_E", mod); // (external, no body)
func__ZNSolsEPFRSoS_E->setCallingConv(CallingConv::C);
}
AttributeSet func__ZNSolsEPFRSoS_E_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__ZNSolsEPFRSoS_E_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__ZNSolsEPFRSoS_E->setAttributes(func__ZNSolsEPFRSoS_E_PAL);

Function* func__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_ = mod->getFunction("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_");
if (!func__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_) {
func__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_ = Function::Create(
 /*Type=*/FuncTy_58,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", mod); // (external, no body)
func__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_->setCallingConv(CallingConv::C);
}
AttributeSet func__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  PAS = AttributeSet::get(mod->getContext(), 1U, B);
 }

Attrs.push_back(PAS);
{
 AttrBuilder B;
 PAS = AttributeSet::get(mod->getContext(), ~0U, B);
}

Attrs.push_back(PAS);
func__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_->setAttributes(func__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__PAL);

Function* func__ZN1A1hEv = mod->getFunction("_ZN1A1hEv");
if (!func__ZN1A1hEv) {
func__ZN1A1hEv = Function::Create(
 /*Type=*/FuncTy_49,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN1A1hEv", mod); 
func__ZN1A1hEv->setCallingConv(CallingConv::C);
func__ZN1A1hEv->setAlignment(2);
}
AttributeSet func__ZN1A1hEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN1A1hEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZN1A1hEv->setAttributes(func__ZN1A1hEv_PAL);

Function* func__GLOBAL__sub_I_A_cpp = mod->getFunction("_GLOBAL__sub_I_A.cpp");
if (!func__GLOBAL__sub_I_A_cpp) {
func__GLOBAL__sub_I_A_cpp = Function::Create(
 /*Type=*/FuncTy_41,
 /*Linkage=*/GlobalValue::InternalLinkage,
 /*Name=*/"_GLOBAL__sub_I_A.cpp", mod); 
func__GLOBAL__sub_I_A_cpp->setCallingConv(CallingConv::C);
func__GLOBAL__sub_I_A_cpp->setSection(".text.startup");
}
AttributeSet func__GLOBAL__sub_I_A_cpp_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__GLOBAL__sub_I_A_cpp_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__GLOBAL__sub_I_A_cpp->setAttributes(func__GLOBAL__sub_I_A_cpp_PAL);

// Global Variable Declarations


GlobalVariable* gvar_struct__ZStL8__ioinit = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/StructTy_class_std__ios_base__Init,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::InternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"_ZStL8__ioinit");
gvar_struct__ZStL8__ioinit->setAlignment(1);

GlobalVariable* gvar_int8___dso_handle = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/IntegerType::get(mod->getContext(), 8),
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, 
/*Name=*/"__dso_handle");

GlobalVariable* gvar_struct__ZSt4cout = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/StructTy_class_std__basic_ostream,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, 
/*Name=*/"_ZSt4cout");
gvar_struct__ZSt4cout->setAlignment(8);

GlobalVariable* gvar_array__str = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_30,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str");
gvar_array__str->setAlignment(1);

GlobalVariable* gvar_array__str1 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_30,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str1");
gvar_array__str1->setAlignment(1);

GlobalVariable* gvar_array__ZTV1A = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_32,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"_ZTV1A");
gvar_array__ZTV1A->setAlignment(8);

GlobalVariable* gvar_ptr__ZTVN10__cxxabiv117__class_type_infoE = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/PointerTy_1,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, 
/*Name=*/"_ZTVN10__cxxabiv117__class_type_infoE");

GlobalVariable* gvar_array__ZTS1A = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_34,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"_ZTS1A");

GlobalVariable* gvar_struct__ZTI1A = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/StructTy_36,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"_ZTI1A");

GlobalVariable* gvar_array_llvm_global_ctors = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_38,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::AppendingLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"llvm.global_ctors");

// Constant Definitions
ConstantAggregateZero* const_struct_61 = ConstantAggregateZero::get(StructTy_class_std__ios_base__Init);
Constant *const_array_62 = ConstantDataArray::getString(mod->getContext(), "A::f", true);
Constant *const_array_63 = ConstantDataArray::getString(mod->getContext(), "A::h", true);
std::vector<Constant*> const_array_64_elems;
ConstantPointerNull* const_ptr_65 = ConstantPointerNull::get(PointerTy_1);
const_array_64_elems.push_back(const_ptr_65);
Constant* const_ptr_66 = ConstantExpr::getCast(Instruction::BitCast, gvar_struct__ZTI1A, PointerTy_1);
const_array_64_elems.push_back(const_ptr_66);
Constant* const_ptr_67 = ConstantExpr::getCast(Instruction::BitCast, func__ZN1A1fEv, PointerTy_1);
const_array_64_elems.push_back(const_ptr_67);
Constant* const_ptr_68 = ConstantExpr::getCast(Instruction::BitCast, func__ZN1A1hEv, PointerTy_1);
const_array_64_elems.push_back(const_ptr_68);
Constant* const_array_64 = ConstantArray::get(ArrayTy_32, const_array_64_elems);
Constant *const_array_69 = ConstantDataArray::getString(mod->getContext(), "1A", true);
std::vector<Constant*> const_struct_70_fields;
std::vector<Constant*> const_ptr_72_indices;
ConstantInt* const_int64_73 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("2"), 10));
const_ptr_72_indices.push_back(const_int64_73);
Constant* const_ptr_72 = ConstantExpr::getGetElementPtr(gvar_ptr__ZTVN10__cxxabiv117__class_type_infoE, const_ptr_72_indices);
Constant* const_ptr_71 = ConstantExpr::getCast(Instruction::BitCast, const_ptr_72, PointerTy_1);
const_struct_70_fields.push_back(const_ptr_71);
std::vector<Constant*> const_ptr_74_indices;
ConstantInt* const_int32_75 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("0"), 10));
const_ptr_74_indices.push_back(const_int32_75);
const_ptr_74_indices.push_back(const_int32_75);
Constant* const_ptr_74 = ConstantExpr::getGetElementPtr(gvar_array__ZTS1A, const_ptr_74_indices);
const_struct_70_fields.push_back(const_ptr_74);
Constant* const_struct_70 = ConstantStruct::get(StructTy_36, const_struct_70_fields);
std::vector<Constant*> const_array_76_elems;
std::vector<Constant*> const_struct_77_fields;
ConstantInt* const_int32_78 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("65535"), 10));
const_struct_77_fields.push_back(const_int32_78);
const_struct_77_fields.push_back(func__GLOBAL__sub_I_A_cpp);
const_struct_77_fields.push_back(const_ptr_65);
Constant* const_struct_77 = ConstantStruct::get(StructTy_39, const_struct_77_fields);
const_array_76_elems.push_back(const_struct_77);
Constant* const_array_76 = ConstantArray::get(ArrayTy_38, const_array_76_elems);
Constant* const_ptr_79 = ConstantExpr::getCast(Instruction::BitCast, func__ZNSt8ios_base4InitD1Ev, PointerTy_45);
std::vector<Constant*> const_ptr_80_indices;
const_ptr_80_indices.push_back(const_int32_75);
const_ptr_80_indices.push_back(const_int32_75);
Constant* const_ptr_80 = ConstantExpr::getGetElementPtr(gvar_struct__ZStL8__ioinit, const_ptr_80_indices);
ConstantInt* const_int32_81 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("1"), 10));
std::vector<Constant*> const_ptr_82_indices;
const_ptr_82_indices.push_back(const_int32_75);
const_ptr_82_indices.push_back(const_int32_75);
Constant* const_ptr_82 = ConstantExpr::getGetElementPtr(gvar_array__str, const_ptr_82_indices);
std::vector<Constant*> const_ptr_83_indices;
const_ptr_83_indices.push_back(const_int32_75);
const_ptr_83_indices.push_back(const_int32_75);
Constant* const_ptr_83 = ConstantExpr::getGetElementPtr(gvar_array__str1, const_ptr_83_indices);

// Global Variable Definitions
gvar_struct__ZStL8__ioinit->setInitializer(const_struct_61);
gvar_array__str->setInitializer(const_array_62);
gvar_array__str1->setInitializer(const_array_63);
gvar_array__ZTV1A->setInitializer(const_array_64);
gvar_array__ZTS1A->setInitializer(const_array_69);
gvar_struct__ZTI1A->setInitializer(const_struct_70);
gvar_array_llvm_global_ctors->setInitializer(const_array_76);

// Function Definitions

// Function: __cxx_global_var_init (func___cxx_global_var_init)
{
 
 BasicBlock* label_entry = BasicBlock::Create(mod->getContext(), "entry",func___cxx_global_var_init,0);
 
 // Block entry (label_entry)
 CallInst* void_84 = CallInst::Create(func__ZNSt8ios_base4InitC1Ev, gvar_struct__ZStL8__ioinit, "", label_entry);
 void_84->setCallingConv(CallingConv::C);
 void_84->setTailCall(false);
 AttributeSet void_84_PAL;
 void_84->setAttributes(void_84_PAL);
 
 std::vector<Value*> int32_85_params;
 int32_85_params.push_back(const_ptr_79);
 int32_85_params.push_back(const_ptr_80);
 int32_85_params.push_back(gvar_int8___dso_handle);
 CallInst* int32_85 = CallInst::Create(func___cxa_atexit, int32_85_params, "", label_entry);
 int32_85->setCallingConv(CallingConv::C);
 int32_85->setTailCall(false);
 AttributeSet int32_85_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  int32_85_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int32_85->setAttributes(int32_85_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry);
 
}

// Function: _ZN1A1fEv (func__ZN1A1fEv)
{
 Function::arg_iterator args = func__ZN1A1fEv->arg_begin();
 Value* ptr_this = args++;
 ptr_this->setName("this");
 
 BasicBlock* label_entry_87 = BasicBlock::Create(mod->getContext(), "entry",func__ZN1A1fEv,0);
 
 // Block entry (label_entry_87)
 AllocaInst* ptr_this_addr = new AllocaInst(PointerTy_50, "this.addr", label_entry_87);
 ptr_this_addr->setAlignment(8);
 StoreInst* void_88 = new StoreInst(ptr_this, ptr_this_addr, false, label_entry_87);
 void_88->setAlignment(8);
 std::vector<Value*> void_89_params;
 void_89_params.push_back(other_90);
 void_89_params.push_back(other_91);
 void_89_params.push_back(other_92);
 CallInst* void_89 = CallInst::Create(func_llvm_dbg_declare, void_89_params, "", label_entry_87);
 void_89->setCallingConv(CallingConv::C);
 void_89->setTailCall(false);
 AttributeSet void_89_PAL;
 void_89->setAttributes(void_89_PAL);
 
 LoadInst* ptr_this1 = new LoadInst(ptr_this_addr, "this1", false, label_entry_87);
 std::vector<Value*> ptr_call_params;
 ptr_call_params.push_back(gvar_struct__ZSt4cout);
 ptr_call_params.push_back(const_ptr_82);
 CallInst* ptr_call = CallInst::Create(func__ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc, ptr_call_params, "call", label_entry_87);
 ptr_call->setCallingConv(CallingConv::C);
 ptr_call->setTailCall(false);
 AttributeSet ptr_call_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 1U, B);
  }
 
 Attrs.push_back(PAS);
 ptr_call_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
ptr_call->setAttributes(ptr_call_PAL);

std::vector<Value*> ptr_call2_params;
ptr_call2_params.push_back(ptr_call);
ptr_call2_params.push_back(func__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_);
CallInst* ptr_call2 = CallInst::Create(func__ZNSolsEPFRSoS_E, ptr_call2_params, "call2", label_entry_87);
ptr_call2->setCallingConv(CallingConv::C);
ptr_call2->setTailCall(false);
AttributeSet ptr_call2_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 ptr_call2_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
ptr_call2->setAttributes(ptr_call2_PAL);

ReturnInst::Create(mod->getContext(), label_entry_87);

}

// Function: _ZN1A1hEv (func__ZN1A1hEv)
{
 Function::arg_iterator args = func__ZN1A1hEv->arg_begin();
 Value* ptr_this_94 = args++;
 ptr_this_94->setName("this");
 
 BasicBlock* label_entry_95 = BasicBlock::Create(mod->getContext(), "entry",func__ZN1A1hEv,0);
 
 // Block entry (label_entry_95)
 AllocaInst* ptr_this_addr_96 = new AllocaInst(PointerTy_50, "this.addr", label_entry_95);
 ptr_this_addr_96->setAlignment(8);
 StoreInst* void_97 = new StoreInst(ptr_this_94, ptr_this_addr_96, false, label_entry_95);
 void_97->setAlignment(8);
 std::vector<Value*> void_98_params;
 void_98_params.push_back(other_99);
 void_98_params.push_back(other_100);
 void_98_params.push_back(other_92);
 CallInst* void_98 = CallInst::Create(func_llvm_dbg_declare, void_98_params, "", label_entry_95);
 void_98->setCallingConv(CallingConv::C);
 void_98->setTailCall(false);
 AttributeSet void_98_PAL;
 void_98->setAttributes(void_98_PAL);
 
 LoadInst* ptr_this1_101 = new LoadInst(ptr_this_addr_96, "this1", false, label_entry_95);
 std::vector<Value*> ptr_call_102_params;
 ptr_call_102_params.push_back(gvar_struct__ZSt4cout);
 ptr_call_102_params.push_back(const_ptr_83);
 CallInst* ptr_call_102 = CallInst::Create(func__ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc, ptr_call_102_params, "call", label_entry_95);
 ptr_call_102->setCallingConv(CallingConv::C);
 ptr_call_102->setTailCall(false);
 AttributeSet ptr_call_102_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 1U, B);
  }
 
 Attrs.push_back(PAS);
 ptr_call_102_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
ptr_call_102->setAttributes(ptr_call_102_PAL);

std::vector<Value*> ptr_call2_103_params;
ptr_call2_103_params.push_back(ptr_call_102);
ptr_call2_103_params.push_back(func__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_);
CallInst* ptr_call2_103 = CallInst::Create(func__ZNSolsEPFRSoS_E, ptr_call2_103_params, "call2", label_entry_95);
ptr_call2_103->setCallingConv(CallingConv::C);
ptr_call2_103->setTailCall(false);
AttributeSet ptr_call2_103_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 ptr_call2_103_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
ptr_call2_103->setAttributes(ptr_call2_103_PAL);

ReturnInst::Create(mod->getContext(), label_entry_95);

}

// Function: _GLOBAL__sub_I_A.cpp (func__GLOBAL__sub_I_A_cpp)
{
 
 BasicBlock* label_entry_105 = BasicBlock::Create(mod->getContext(), "entry",func__GLOBAL__sub_I_A_cpp,0);
 
 // Block entry (label_entry_105)
 CallInst* void_106 = CallInst::Create(func___cxx_global_var_init, "", label_entry_105);
 void_106->setCallingConv(CallingConv::C);
 void_106->setTailCall(false);
 AttributeSet void_106_PAL;
 void_106->setAttributes(void_106_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_105);
 
}

return mod;
}
